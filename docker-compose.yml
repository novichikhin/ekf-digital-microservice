version: "3"

services:
  server:
    build:
      context: ./
      dockerfile: docker/server/Dockerfile
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://server:${SERVER_PORT}/healthcheck/" ]
      interval: 10s
      timeout: 5s
      retries: 5

  consumer:
    build:
      context: ./
      dockerfile: docker/queue/rabbitmq/digest/Dockerfile
    depends_on:
      server:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    env_file:
      - .env
    ports:
      - "${RABBITMQ_CLIENT_PORT}:${RABBITMQ_CLIENT_PORT}"
      - "${RABBITMQ_HTTP_PORT}:${RABBITMQ_HTTP_PORT}"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_LOGIN}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:latest
    env_file:
      - .env
    ports:
      - "${PG_PORT}:${PG_PORT}"
    environment:
      - POSTGRES_HOST=${PG_HOST}
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5